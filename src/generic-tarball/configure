#!/bin/sh

# A script to configure the haskell platform

# It works by...
# It expects to be run inside...

# install settings, you can override these by setting environment vars
PREFIX=${PREFIX:-/usr/local}
#VERBOSE
#EXTRA_CONFIGURE_OPTS

# programs, you can override these by setting environment vars
GHC=${GHC:-ghc}
GHC_PKG=${GHC_PKG:-ghc-pkg}

EXPECTED_GHC_VER="6.10.2"

die () {
  echo
  echo "Error:"
  echo $1 >&2
  exit 2
}

# Check we're in the right directory:
[ -e platform.packages ] \
  || die "The configure script must be run in the haskell-platform directory"

${GHC} --numeric-version > /dev/null \
  || die "${GHC} not found (or could not be run). If ghc is installed make sure it is on your PATH or set the GHC and GHC_PKG vars."
${GHC_PKG} --version     > /dev/null \
  || die "${GHC_PKG} not found."
GHC_VER=`${GHC} --numeric-version`
GHC_PKG_VER=`${GHC_PKG} --version | cut -d' ' -f 5`
[ ${GHC_VER} = ${EXPECTED_GHC_VER} ] \
  || die "Expected ghc version not found, ${EXPECTED_GHC_VER}"

[ ${GHC_VER} = ${GHC_PKG_VER} ] \
  || die "Version mismatch between ${GHC} and ${GHC_PKG} If you set the GHC variable then set GHC_PKG too"

# Cache the list of packages:
echo "Checking installed packages for ghc-${GHC_VER}..."
echo " $( ${GHC_PKG} list --simple-output ) " > installed.packages

# Is this exact version of the package already installed?
is_pkg_installed () {
  PKG_VER=$1
  grep " ${PKG_VER} " installed.packages > /dev/null 2>&1
}

# Check that we have the core libs installed, which should be distributed
# with ghc
echo -n "Checking the core packages..."
for pkg in $(cat core.packages); do
  is_pkg_installed "$pkg" \
    || die "The core package $pkg is missing. It should have been distributed with ghc-6.10.2."
done

rm installed.packages
die "Not implemented further"
