#!/bin/sh

# A script to configure the haskell platform

# It works by confirming that ghc 6.10.2 is installed,
# and that all core packages exists.
# It expects to be run inside the haskell-platform directory.

# install settings, you can override these by setting environment vars
PREFIX=${PREFIX:-/usr/local}
#VERBOSE
#EXTRA_CONFIGURE_OPTS

# programs, you can override these by setting environment vars
GHC=${GHC:-ghc}
GHC_PKG=${GHC_PKG:-ghc-pkg}

PLATFORM_VERSION="2009.0.0"
REQUIRED_GHC_VER="6.10.2"

die () {
  echo
  echo "Error while configuring the haskell platform:"
  echo $1 >&2
  exit 2
}

# Check we're in the right directory:
[ -e platform.packages ] \
  || die "The configure script must be run in the haskell-platform directory"

echo -n "checking for ghc... "
GHC_PATH=$(which ${GHC}) \
  || die "${GHC} not found. If ghc is installed make sure it is on your PATH or use --with-ghc="
echo "${GHC_PATH}"

echo -n "checking for ghc-pkg... "
GHC_PKG_PATH=$(which ${GHC_PKG}) \
  || die "${GHC_PKG} not found. If ghc is installed make sure ghc-pkg is on your PATH or use --with-ghc-pkg="
echo "${GHC_PKG_PATH}"

echo -n "checking version of ghc... "
GHC_VER=$(${GHC} --numeric-version) \
  || die "${GHC} does not seem to work (or maybe ${GHC_PATH} is not actually ghc)."
echo "${GHC_VER}"

echo -n "checking version of ghc-pkg matches... "
GHC_PKG_VER=$(${GHC_PKG} --version | cut -d' ' -f 5) \
  || die "${GHC_PKG} does not seem to work (or is not actually ghc-pkg)."
echo "yes"

[ ${GHC_VER} = ${GHC_PKG_VER} ] \
  || die "Version mismatch between ${GHC} and ${GHC_PKG}. If you used --with-ghc= then also set --with-ghc-pkg="
  
[ ${GHC_VER} = ${REQUIRED_GHC_VER} ] \
  || die "The haskell platform version ${PLATFORM_VERSION} requires ghc version ${REQUIRED_GHC_VER}"

# Cache the list of packages:
echo -n "checking the ghc core packages are all installed... "
echo " $( ${GHC_PKG} list --simple-output ) " > installed.packages

# Is this exact version of the package already installed?
is_pkg_installed () {
  PKG_VER=$1
  grep " ${PKG_VER} " installed.packages > /dev/null 2>&1
}

# Check that we have the core libs installed, which should be distributed
# with ghc
for pkg in $(cat core.packages); do
  is_pkg_installed "$pkg" \
    || die "The core package $pkg is missing. It should have been distributed with ${REQUIRED_GHC_VER}"
done
echo "yes"

rm installed.packages

echo "creating ./config.status"
[ -e config.status ] && rm -f config.status
echo "PREFIX=${PREFIX}" >> config.status

echo '**************************************************'
echo '* Configuration completed successfully.           '
echo '*                                                 '
echo '* Now do "make" followed by "sudo make install"   '
echo '**************************************************'
